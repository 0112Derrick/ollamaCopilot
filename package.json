{
  "name": "ollama-copilot-dw",
  "displayName": "Ollama_copilot",
  "description": "Ollama Copilot is a powerful VS Code extension that enables seamless interaction with local Large Language Models (LLMs) and OpenAI for enhanced code assistance. With this extension, developers can easily read and write code using intelligent, AI-driven suggestions tailored to their specific project. Whether it's generating code snippets, autocompleting functions, or refactoring existing code, Ollama Copilot provides a streamlined experience for improving productivity and coding efficiency, all while leveraging the flexibility of local models and OpenAI's capabilities.",
  "version": "0.0.2",
  "icon": "media/ollama-icon-01-blk_white.png",
  "publisher": "derrick-williams",
  "repository": {
    "type": "git",
    "url": "https://github.com/0112Derrick/ollamaCopilot"
  },
  "engines": {
    "vscode": "^1.92.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "keybindings": [
      {
        "command": "yourExtension.clearInlineSuggestion",
        "key": "escape",
        "when": "inlineSuggestionVisible && editorTextFocus"
      }
    ],
    "commands": [
      {
        "command": "ollama-copilot.setModel",
        "title": "Set Ollama Model"
      },
      {
        "command": "ollama-copilot.resetStoredValues",
        "title": "Reset Ollama: Model | URL | Headers."
      },
      {
        "command": "ollama-copilot.clearAllSavedState",
        "title": "Ollama: Uninstall"
      },
      {
        "command": "ollama-copilot.clearEmbedData",
        "title": "Ollama Workspace: Clear all saved embedded data."
      },
      {
        "command": "ollama-copilot.setOllamaHeaders",
        "title": "Set Ollama Headers"
      },
      {
        "command": "ollama-copilot.setURL_WebView",
        "title": "Set Ollama URL"
      },
      {
        "command": "ollama-copilot.getMoreInfo",
        "title": "Tell me more about this code."
      },
      {
        "command": "ollama-copilot.improveTheCode",
        "title": "Improve this code."
      },
      {
        "command": "ollama-copilot.refactorCode",
        "title": "Refactor this code."
      },
      {
        "command": "ollama-copilot.designPattern",
        "title": "What is the best design pattern for this code."
      },
      {
        "command": "ollama-copilot.debugTheCode",
        "title": "Debug this code."
      },
      {
        "command": "ollama-copilot.clearWebviewChats",
        "title": "Clear Webview chats."
      },
      {
        "command": "ollama-copilot.writeAUnitTest",
        "title": "Write a unit test for this function."
      },
      {
        "command": "ollama-copilot.embedCode",
        "title": "Embed this code."
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "ollama-copilot.getMoreInfo",
          "when": "editorTextFocus",
          "group": "3_execution"
        },
        {
          "command": "ollama-copilot.embedCode",
          "when": "editorTextFocus",
          "group": "3_execution"
        },
        {
          "command": "ollama-copilot.writeAUnitTest",
          "when": "editorTextFocus",
          "group": "3_execution"
        },
        {
          "command": "ollama-copilot.designPattern",
          "when": "editorTextFocus",
          "group": "3_execution"
        },
        {
          "command": "ollama-copilot.debugTheCode",
          "when": "editorTextFocus",
          "group": "3_execution"
        },
        {
          "command": "ollama-copilot.clearWebviewChats",
          "when": "editorTextFocus",
          "group": "3_execution"
        },
        {
          "command": "ollama-copilot.improveTheCode",
          "when": "editorTextFocus",
          "group": "3_execution"
        },
        {
          "command": "ollama-copilot.refactorCode",
          "when": "editorTextFocus",
          "group": "3_execution"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "ollamaContainer",
          "title": "Ollama",
          "icon": "media/ollama-icon-01-edit.png"
        }
      ]
    },
    "views": {
      "ollamaContainer": [
        {
          "type": "webview",
          "id": "ollamaView",
          "name": "Ollama webview"
        }
      ]
    }
  },
  "scripts": {
    "startOllama": "ollama run llama3",
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/fs-extra": "^9.0.13",
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.92.0",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "esbuild": "^0.21.5",
    "eslint": "^8.57.0",
    "fs-extra": "^10.0.0",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.6.0"
  },
  "dependencies": {
    "axios": "^1.7.4",
    "path": "^0.12.7",
    "vectra": "^0.9.0",
    "xml2js": "^0.6.2"
  }
}
